-- DATASET - DATA WAREHOUSE

-- данные по вручению Премии обновляются еженедельно, предположим, что данных много 
-- берется дельта значений, т.е. только новые значения
-- партиции по дате загрузки + категории Премии + году вручения, кластеризация по имени лауреата, разделим на 32 бакета.
-- данные уже существуют в созданной ранее таблице akrasnovadb.dataset, 
-- переложим их в таблицу в новой db akrasnova_wrh.dataset с партициями и бакетами

-- создадим временную managed таблицу нужной структуры
create table akrasnova_tmp.dataset_wrh (
	laureate_id int,
	prize varchar(50),
	prize_share varchar(10),
	laureate_type varchar(20),
	motivation varchar(255),
	laureate_person_name varchar(255),
	laureate_gender varchar(10),
	society_name varchar(255),
	birth_date date,
	birth_city_name varchar(50),
	birth_city_region varchar(50),
	birth_city_population int,
	birth_city_latitude decimal(20,17),
	birth_city_longitude decimal(20,17),
	birth_country_name varchar(50),
	birth_country_parent_name varchar(50),
	birth_region_name varchar(50),
	birth_continent_name varchar(50),
	birth_country_population int,
	birth_country_area_sq_miles int,
	birth_country_pop_dencity_per_sq_mile decimal(8,2),
	birth_country_coastline decimal(7,3),
	birth_country_net_migration decimal(6,3),
	birth_country_infant_mortality_per_1000 decimal(7,3),
	birth_country_gdb int,
	birth_country_percent_literacy decimal(6,3),
	birth_country_phones_per_1000 decimal(7,3),
	birth_country_percent_arable decimal(6,3),
	birth_country_percent_crops decimal(6,3),
	birth_country_percent_other decimal(6,3),
	birth_country_climate decimal(4,2),
	birth_country_birthrate decimal(6,3),
	birth_country_deathrate decimal(6,3),
	birth_country_agriculture decimal(5,4),
	birth_country_industry decimal(5,4),
	birth_country_service decimal(5,4),
	death_date date,
	death_city_name varchar(50),
	death_city_region varchar(50),
	death_city_population int,
	death_city_latitude decimal(20,17),
	death_city_longitude decimal(20,17),
	death_country_name varchar(50),
	death_country_parent_name varchar(50),
	death_region_name varchar(50),
	death_continent_name varchar(50),
	death_country_population int,
	death_country_gdb int,
	death_country_coastline decimal(7,3),
	death_country_climate decimal(4,2),
	organization_name1 varchar(255),
	organization_parent_name1 varchar(255),
	organization_city_name1 varchar(50),
	organization_city_region1 varchar(50),
	organization_city_population1 int,
	organization_city_latitude1 decimal(20,17),
	organization_city_longitude1 decimal(20,17),
	organization_country_name1 varchar(50),
	organization_country_parent_name1 varchar(50),
	organization_region_name1 varchar(50),
	organization_continent_name1 varchar(50),
	organization_country_population1 int,
	organization_country_gdb1 int,
	organization_name2 varchar(255),
	organization_parent_name2 varchar(255),
	organization_city_name2 varchar(50),
	organization_city_region2 varchar(50),
	organization_city_population2 int,
	organization_city_latitude2 decimal(20,17),
	organization_city_longitude2 decimal(20,17),
	organization_country_name2 varchar(50),
	organization_country_parent_name2 varchar(50),
	organization_region_name2 varchar(50),
	organization_continent_name2 varchar(50),
	organization_country_population2 int,
	organization_country_gdb2 int,
	organization_name3 varchar(255),
	organization_parent_name3 varchar(255),
	organization_city_name3 varchar(50),
	organization_city_region3 varchar(50),
	organization_city_population3 int,
	organization_city_latitude3 decimal(20,17),
	organization_city_longitude3 decimal(20,17),
	organization_country_name3 varchar(50),
	organization_country_parent_name3 varchar(50),
	organization_region_name3 varchar(50),
	organization_continent_name3 varchar(50),
	organization_country_population3 int,
	organization_country_gdb3 int,
	year int,
	category varchar(20),
	upd_date date -- новое поле, дата загрузки
);

-- insert из таблицы, созданной в процессе преобразования Spark, во временную таблицу
insert overwrite table akrasnova_tmp.dataset_wrh select * from 
(
	(select 
		laureate_id, prize, prize_share, laureate_type, motivation, laureate_person_name, laureate_gender,society_name, 
		birth_date, birth_city_name, birth_city_region, birth_city_population, birth_city_latitude, birth_city_longitude, 
		birth_country_name, birth_country_parent_name, birth_region_name, birth_continent_name, birth_country_population,
		birth_country_area_sq_miles, birth_country_pop_dencity_per_sq_mile, birth_country_coastline, birth_country_net_migration, 
		birth_country_infant_mortality_per_1000, birth_country_gdb, birth_country_percent_literacy, birth_country_phones_per_1000, 
		birth_country_percent_arable, birth_country_percent_crops, birth_country_percent_other, birth_country_climate, 
		birth_country_birthrate, birth_country_deathrate, birth_country_agriculture, birth_country_industry, birth_country_service, 
		death_date, death_city_name, death_city_region, death_city_population, death_city_latitude, death_city_longitude, 
		death_country_name, death_country_parent_name, death_region_name, death_continent_name, death_country_population, 
		death_country_gdb, death_country_coastline, death_country_climate, 
		organization_name1, organization_parent_name1, organization_city_name1, organization_city_region1, organization_city_population1, 
		organization_city_latitude1, organization_city_longitude1, organization_country_name1, organization_country_parent_name1, 
		organization_region_name1, organization_continent_name1, organization_country_population1, organization_country_gdb1, 
		organization_name2, organization_parent_name2, organization_city_name2, organization_city_region2, organization_city_population2, 
		organization_city_latitude2, organization_city_longitude2, organization_country_name2, organization_country_parent_name2, 
		organization_region_name2, organization_continent_name2, organization_country_population2, organization_country_gdb2, 
		organization_name3, organization_parent_name3, organization_city_name3, organization_city_region3, organization_city_population3, 
		organization_city_latitude3, organization_city_longitude3, organization_country_name3, organization_country_parent_name3, 
		organization_region_name3, organization_continent_name3, organization_country_population3, organization_country_gdb3, 
		year, category
	from akrasnovadb.dataset), 
	current_date
);

-- создаем managed таблицу
create table akrasnova_wrh.dataset (
	laureate_id int,
	prize varchar(50),
	prize_share varchar(10),
	laureate_type varchar(20),
	motivation varchar(255),
	laureate_person_name varchar(255),
	laureate_gender varchar(10),
	society_name varchar(255),
	birth_date date,
	birth_city_name varchar(50),
	birth_city_region varchar(50),
	birth_city_population int,
	birth_city_latitude decimal(20,17),
	birth_city_longitude decimal(20,17),
	birth_country_name varchar(50),
	birth_country_parent_name varchar(50),
	birth_region_name varchar(50),
	birth_continent_name varchar(50),
	birth_country_population int,
	birth_country_area_sq_miles int,
	birth_country_pop_dencity_per_sq_mile decimal(8,2),
	birth_country_coastline decimal(7,3),
	birth_country_net_migration decimal(6,3),
	birth_country_infant_mortality_per_1000 decimal(7,3),
	birth_country_gdb int,
	birth_country_percent_literacy decimal(6,3),
	birth_country_phones_per_1000 decimal(7,3),
	birth_country_percent_arable decimal(6,3),
	birth_country_percent_crops decimal(6,3),
	birth_country_percent_other decimal(6,3),
	birth_country_climate decimal(4,2),
	birth_country_birthrate decimal(6,3),
	birth_country_deathrate decimal(6,3),
	birth_country_agriculture decimal(5,4),
	birth_country_industry decimal(5,4),
	birth_country_service decimal(5,4),
	death_date date,
	death_city_name varchar(50),
	death_city_region varchar(50),
	death_city_population int,
	death_city_latitude decimal(20,17),
	death_city_longitude decimal(20,17),
	death_country_name varchar(50),
	death_country_parent_name varchar(50),
	death_region_name varchar(50),
	death_continent_name varchar(50),
	death_country_population int,
	death_country_gdb int,
	death_country_coastline decimal(7,3),
	death_country_climate decimal(4,2),
	organization_name1 varchar(255),
	organization_parent_name1 varchar(255),
	organization_city_name1 varchar(50),
	organization_city_region1 varchar(50),
	organization_city_population1 int,
	organization_city_latitude1 decimal(20,17),
	organization_city_longitude1 decimal(20,17),
	organization_country_name1 varchar(50),
	organization_country_parent_name1 varchar(50),
	organization_region_name1 varchar(50),
	organization_continent_name1 varchar(50),
	organization_country_population1 int,
	organization_country_gdb1 int,
	organization_name2 varchar(255),
	organization_parent_name2 varchar(255),
	organization_city_name2 varchar(50),
	organization_city_region2 varchar(50),
	organization_city_population2 int,
	organization_city_latitude2 decimal(20,17),
	organization_city_longitude2 decimal(20,17),
	organization_country_name2 varchar(50),
	organization_country_parent_name2 varchar(50),
	organization_region_name2 varchar(50),
	organization_continent_name2 varchar(50),
	organization_country_population2 int,
	organization_country_gdb2 int,
	organization_name3 varchar(255),
	organization_parent_name3 varchar(255),
	organization_city_name3 varchar(50),
	organization_city_region3 varchar(50),
	organization_city_population3 int,
	organization_city_latitude3 decimal(20,17),
	organization_city_longitude3 decimal(20,17),
	organization_country_name3 varchar(50),
	organization_country_parent_name3 varchar(50),
	organization_region_name3 varchar(50),
	organization_continent_name3 varchar(50),
	organization_country_population3 int,
	organization_country_gdb3 int
)
partitioned by (
	year int,
	category varchar(20),
	upd_date date
)
clustered by (laureate_id) into 32 buckets
stored as orc;

-- указываем, что партиционирование динамическое
set hive.exec.dynamic.partition.mode=nonstrict
-- инсертим данные из временной таблицы
insert into akrasnova_wrh.dataset partition (year,category,upd_date) select * from akrasnova_tmp.dataset_wrh;